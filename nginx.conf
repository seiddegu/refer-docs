server {
    #listen 8085;
    #server_name example.et;
    #return 301 https://example.et$request_uri;

    listen 80;
    server_name  www.example.et;
    return 301 https://www.example.ett$request_uri;
    }

server {

    listen 443 ssl;
    server_name www.example.et;
    #ssl on
    ssl_certificate /etc/nginx/ssl/dirname/pemkeyname.pem;
    ssl_certificate_key /etc/nginx/ssl/dirname/kename.key;

    #access_log  /var/log/nginx/host.access.log  main;

    #location / {
    #     root   /usr/share/nginx/html;
    #    index  index.html index.htm;
    #}

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
   location / {
    # Reverse proxy for Next server
    proxy_pass http://localhost:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    # we need to remove this 404 handling
    # because of Next's error handling and _next folder
    # try_files $uri $uri/ =404;
  }
        location /_next/static {
                alias /var/www/html/dir_name/.next/static;
                add_header Cache-Control "public, max-age=3600, immutable";
        }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
